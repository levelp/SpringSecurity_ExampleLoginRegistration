<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.2.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/security
		                   http://www.springframework.org/schema/security/spring-security.xsd">

    <context:property-placeholder location="classpath:database.properties"/>
    <context:annotation-config/>
    <context:component-scan base-package="org.levelp.auth.dao"/>
    <context:component-scan base-package="org.levelp.auth.service"/>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${db.driver}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
            </props>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>org.levelp.auth.model.User</value>
            </list>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="userService" class="org.levelp.auth.service.UserServiceImpl"/>
    <bean id="userDAO" class="org.levelp.auth.dao.UsersDAOImpl"/>


    <!--Spring security-->
    <security:http auto-config="true" use-expressions="true">
        <security:intercept-url
                pattern="/**" access="permitAll"/>
        <security:form-login login-page="/signin"
                             username-parameter="username"
                             password-parameter="password"
                             login-processing-url="/login"
                             authentication-success-handler-ref="myAuthenticationSuccessHandler"/>
        <security:logout logout-url="/user-logout"/>
    </security:http>

    <bean id="authenticationFilter"
          class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
    </bean>

    <bean id="passwordEncoder"
          class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
    </bean>
    <bean id="userDetailsService" class="org.levelp.auth.service.MyUserDetailsService"/>
    <bean id="authProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="passwordEncoder" ref="passwordEncoder"/>
        <property name="userDetailsService" ref="userDetailsService"/>
    </bean>
    <security:authentication-manager id="authenticationManager">
        <security:authentication-provider ref="authProvider"/>
    </security:authentication-manager>
    <bean id="myAuthenticationSuccessHandler"
          class="org.levelp.auth.service.MySimpleUrlAuthenticationSuccessHandler"/>

</beans>